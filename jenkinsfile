//use for windows os
pipeline {
   agent any
   triggers {
      cron 'H * * * *'
      pollSCM 'H * * * *'
   }
   stages{
      stage('git clone') {
         steps{
            git 'https://github.com/joeren2010/aws_trav_globes.git'
         }
      }
      stage("verify tools") {
         steps{
            bat 'docker --version'               
            bat 'docker info'
            bat 'docker-compose --version'
         }
      }   
      stage("prune docker") {
         steps{
            echo 'uncomment code to prune your docker'
            // bat 'docker system prune -a --volumes -f'
         }
      }
      stage("deploy docker") {
         steps{
            def inspectExitCode = bat script: "docker container inspect aws_trav_globes", returnStatus: true
            if(inspectExitCode == 0){
               bat 'docker-compose restart'
               bat 'docker-compose ps'
            }
            else{
               bat 'docker-compose up --build -d --wait'
               bat 'docker-compose ps'                  
            }
         }
         // steps{
         //    bat 'docker-compose restart'
         //    bat 'docker-compose ps'
         // }
      }
      stage("quality tests") {
         steps{
            echo 'quality testing stage'
         }
      }
      stage("send notices") {
         steps{
            echo 'sending notifications'
         }
      }
   }
   post {
      always{
         // bat 'docker-compose stop'
         bat 'docker-compose down'
         bat 'docker-compose ps'
      }
   }
}




//use for linux os
// pipeline {
//    agent any
//    triggers {
//       pollSCM 'H * * * *'
//    }
//    stages{
//       stage('git clone') {
//          steps{
//             git 'https://github.com/joeren2010/aws_trav_globes.git'
//          }
//       }
//       stage("verify tools") {
//          steps{
//             sh 'docker --version'               
//             sh 'docker info'
//             sh 'docker-compose --version'
//          }
//       }   
//       stage("prune docker") {
//          steps{
//             sh 'docker system prune -a --volumes -f'
//          }
//       }
//       stage("start container") {
//          steps{
//             sh 'docker-compose up --build -d --wait'
//             sh 'docker-compose ps'
//          }
//       }
//    }
//    post {
//       always{
//          sh 'docker-compose down --remove-ophans -v'
//          sh 'docker-compose ps'
//       }
//    }
// }